{"version":3,"sources":["trie.js","alz.js","predictor.js","Navbar.js","components/a.js","components/b.js","components/c.js","components/d.js","App.js","constants.js","reportWebVitals.js","index.js"],"names":["Node","value","this","children","Trie","root","prototype","nodeAt","key","node","i","length","get","addNode","char","add","update","callbackfn","load","trie","loadJSON","json","parsedTrie","JSON","parse","ALZ","dictionary","phrase","symbolsWindow","maxLZSize","symbolsCount","symbol","increment","substring","predict","symbols","Object","entries","reduce","accum","entryNode","suffixKey","childrenValueSum","values","escapeProbability","keys","forEach","LINKS","STORAGE_KEY","PREDICT_LINK_MAP","predictor","storedALZ","localStorage","getItem","saveToStorage","setItem","stringify","link","predictions","sortedPredictions","sort","a","b","probability","object","searchValue","getByValue","reset","A","B","C","D","Sidebar","onPredict","onReset","to","onClick","c","App","useState","setAlert","message","useEffect","style","color","path","toFixed","d","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d90a9c9.chunk.js","sourcesContent":["function Node(value) {\n  this.children = {};\n  this.value = value;\n}\n\nfunction Trie() {\n  this.root = new Node();\n}\n\nTrie.prototype.nodeAt = function nodeAt(key) {\n  let node = this.root;\n\n  for (let i = 0; i < key.length; i += 1) {\n    node = node.children[key[i]];\n\n    if (typeof node === 'undefined') {\n      return undefined;\n    }\n  }\n\n  return node;\n};\n\nTrie.prototype.get = function get(key) {\n  const node = this.nodeAt(key);\n\n  if (typeof node === 'undefined') {\n    return undefined;\n  }\n\n  return node.value;\n};\n\nTrie.prototype.addNode = function addNode(key) {\n  let node = this.root;\n\n  for (let i = 0, char; i < key.length; i += 1) {\n    char = key[i];\n    node = node.children[char] || (node.children[char] = new Node());\n  }\n\n  return node;\n};\n\nTrie.prototype.add = function add(key, value) {\n  const node = this.addNode(key);\n  node.value = value;\n};\n\nTrie.prototype.update = function update(key, callbackfn) {\n  const node = this.addNode(key);\n  node.value = callbackfn(node.value);\n};\n\nTrie.prototype.load = function load(trie) {\n  this.root.children = trie.root.children;\n};\n\nTrie.prototype.loadJSON = function loadJSON(json) {\n  const parsedTrie = JSON.parse(json);\n  this.load(parsedTrie);\n};\n\nexport default Trie;\n","import Trie from './trie';\n\nfunction ALZ() {\n  this.trie = new Trie();\n  this.dictionary = {};\n  this.phrase = '';\n  this.symbolsWindow = '';\n  this.maxLZSize = 0;\n  this.symbolsCount = 0;\n}\n\nALZ.prototype.add = function add(symbol) {\n  this.symbolsCount += 1;\n  this.phrase += symbol;\n\n  if (!this.dictionary[this.phrase]) {\n    this.dictionary[this.phrase] = 1;\n    if (this.phrase.length > this.maxLZSize) {\n      this.maxLZSize = this.phrase.length;\n    }\n    this.phrase = '';\n  }\n\n  this.symbolsWindow += symbol;\n\n  if (this.symbolsWindow.length > this.maxLZSize) {\n    this.symbolsWindow = this.symbolsWindow.substring(1);\n  }\n\n  // increment frequencies of all context from symbolsWindow (that includes symbol)\n  function increment(value = 0) {\n    return value + 1;\n  }\n  for (let i = 0; i < this.symbolsWindow.length; i += 1) {\n    this.trie.update(this.symbolsWindow.substring(i, this.symbolsWindow.length), increment);\n  }\n};\n\nALZ.prototype.predict = function predict() {\n  // create a dictionary with all symbols,\n  // and initialize them with their respective order-0 probability.\n  /* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n  const symbols = Object.entries(this.trie.root.children).reduce((accum, entryNode) => {\n    accum[entryNode[0]] = entryNode[1].value / this.symbolsCount;\n\n    return accum;\n  }, {});\n\n  // console.log(\"symbols1\", symbols)\n  // calculate symbolsWindow probability for each suffix, except itself\n  for (let i = this.symbolsWindow.length - 1; i > 0; i -= 1) {\n    const suffixKey = this.symbolsWindow.substring(i, this.symbolsWindow.length);\n    const { children } = this.trie.nodeAt(suffixKey);\n    const childrenValueSum = Object.values(children).reduce((accum, node) => accum + node.value, 0);\n\n    // calculate and apply escape probability\n    const value = this.trie.get(suffixKey);\n    const escapeProbability = (value - childrenValueSum) / value;\n    Object.keys(symbols).forEach((key) => {\n      symbols[key] *= escapeProbability;\n    });\n\n    // add each child probability related to the current suffix\n    Object.keys(children).forEach((key) => {\n      symbols[key] += children[key].value / this.trie.get(suffixKey);\n    });\n  }\n  // console.log(\"symbols2\", symbols)\n\n  return symbols;\n};\n\nALZ.prototype.loadJSON = function loadJSON(json) {\n  const {\n    trie,\n    dictionary,\n    phrase,\n    symbolsWindow,\n    symbolsCount,\n    maxLZSize,\n  } = JSON.parse(json);\n\n  this.trie.load(trie);\n  this.dictionary = dictionary;\n  this.phrase = phrase;\n  this.symbolsWindow = symbolsWindow;\n  this.maxLZSize = maxLZSize;\n  this.symbolsCount = symbolsCount;\n};\n\nexport default ALZ;\n","// import ALZ from 'alz-predictor'\nimport ALZ from './alz'\n\n\nexport const LINKS = {\n  A: 'A',\n  B: 'B',\n  D: 'D',\n  C: 'C',\n}\n\n\nexport default (function predictor() {\n  const STORAGE_KEY = 'alz-predictor'\n  const PREDICT_LINK_MAP = {\n    [LINKS.A]: 'a',\n    [LINKS.B]: 'b',\n    [LINKS.D]: 'd',\n    [LINKS.C]: 'c',\n  }\n\n  function getByValue(object, searchValue) {\n    for (let [key, value] of Object.entries(object)) {\n      if (value === searchValue)\n        return key;\n    }\n  }\n\n  let predictor = new ALZ()\n\n  const storedALZ = localStorage.getItem(STORAGE_KEY)\n  if (storedALZ) {\n    predictor.loadJSON(storedALZ)\n  }\n\n\n  function saveToStorage() {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(predictor))\n  }\n\n  function addPrediction(link) {\n    predictor.add(PREDICT_LINK_MAP[link])\n    // todo: debounce saving\n    saveToStorage()\n  }\n\n  function getPrediction() {\n    const predictions = predictor.predict()\n    const sortedPredictions = Object.keys(predictions).sort((a, b) => predictions[b] - predictions[a])\n\n    // 最高概率的链接（即预测结果）\n    const probability = predictions[sortedPredictions[0]]\n    const link = getByValue(PREDICT_LINK_MAP, sortedPredictions[0])\n\n    return ({\n      link,\n      probability,\n      predictions\n    })\n  }\n\n  function reset() {\n    predictor = new ALZ()\n    saveToStorage()\n  }\n\n  return ({\n    add: addPrediction,\n    get: getPrediction,\n    reset,\n  })\n\n})()\n\n","import { Link } from \"react-router-dom\";\nimport predictor, { LINKS } from './predictor'\n\n\nconst { A, B,  C, D } = LINKS\n\n\nexport default function Sidebar({ onPredict, onReset }) {\n  return (\n    <div>\n      <div>\n        <Link to=\"/a\" onClick={() => predictor.add(A)}>A</Link>\n      </div>\n      <div>\n        <Link to=\"/b\" onClick={() => predictor.add(B)}>B</Link>\n      </div>\n      <div>\n        <Link to=\"/c\" onClick={() => predictor.add(C)}>C</Link>\n      </div>\n      <div>\n        <Link to=\"/d\" onClick={() => predictor.add(D)}>D</Link>\n      </div>\n      <button onClick={onPredict}>Predict</button>\n      <button onClick={onReset}>Reset</button>\n    </div>\n  )\n}","export default function a() {\n\n  return (\n    <div>\n    </div>\n  )\n}","export default function b() {\n\n    return (\n      <div>\n      </div>\n    )\n  }","export default function c() {\n\n    return (\n      <div>\n      </div>\n    )\n  }","export default function a() {\n\n    return (\n      <div>\n      </div>\n    )\n  }","import { useEffect, useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Navbar from './Navbar'\nimport A from \"./components/a\";\nimport B from \"./components/b\";\nimport C from \"./components/c\";\nimport D from \"./components/d\";\nimport { PROBABILITY_THRESHOLD } from './constants'\nimport predictor from './predictor'\n\nfunction App() {\n\n  const [alert, setAlert] = useState()\n\n  function showAlert(message) {\n    setAlert(message)\n  }\n\n  function predict() {\n    const { probability } = predictor.get()\n    showAlert(`${probability}`)\n  }\n\n  useEffect(predict, [])\n\n  const { link, probability, predictions } = predictor.get()\n\n  function reset() {\n    predictor.reset();\n    predict();\n  }\n\n  return (\n    <div>\n      <h1>alz predictor demo</h1>\n      <h3 style={{color: 'red'}}>注意⚠️：<span style={{color: 'black'}}>alz predictor存在localStorage中</span></h3>\n      <div>点击ABCD链接提供训练数据</div>\n      <div>点击Predict按钮获取预测概率</div>\n      <Router>\n        <Navbar onPredict={predict} onReset={reset}/>\n        <div>\n          <Switch>\n            <Route path=\"/b\">\n              <B/>\n            </Route>\n            <Route path=\"/c\">\n              <C/>\n            </Route>\n            <Route path=\"/d\">\n              <D/>\n            </Route>\n            <Route path=\"/a\">\n              <A/>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n\n      <div>\n          {\n            link ? \n            <div>\n              {\n                probability < PROBABILITY_THRESHOLD ?\n                <div>\n                  预提取{link}，但概率小于{PROBABILITY_THRESHOLD},  建议提供更多训练数据!\n                  <div>下一个点击事件是a链接的概率：{predictions.a ? predictions.a.toFixed(2) : 0}</div>\n                  <div>下一个点击事件是b链接的概率：{predictions.b ? predictions.b.toFixed(2) : 0}</div>\n                  <div>下一个点击事件是c链接的概率：{predictions.c ? predictions.c.toFixed(2) : 0}</div>\n                  <div>下一个点击事件是d链接的概率：{predictions.d ? predictions.d.toFixed(2) : 0}</div>\n                </div>\n                :\n                <div>\n                  预提取{link}\n                  <div>下一个点击事件是a链接的概率：{predictions.a ? predictions.a.toFixed(2) : 0}</div>\n                  <div>下一个点击事件是b链接的概率：{predictions.b ? predictions.b.toFixed(2) : 0}</div>\n                  <div>下一个点击事件是c链接的概率：{predictions.c ? predictions.c.toFixed(2) : 0}</div>\n                  <div>下一个点击事件是d链接的概率：{predictions.d ? predictions.d.toFixed(2) : 0}</div>\n                </div>\n              }\n            </div> \n            : \n            <div>没有训练数据</div>\n          }\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const PROBABILITY_THRESHOLD = 0.70","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}